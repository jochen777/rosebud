The brand new, pragmatic, compact, fast and component based webframework to generate websites.
The component framework for component framework haters.
Saves you ages of work. 
New complex websites in minutes.

* global variables do not override local variables (OK)
* cool error handling (bean not there, template not there...) - (OK)
* New Error-Handling Class (OK)
* Einführen von Unit-Tests (OK)
* rename "type" to "beanName" (OK)
* create a new config name: "classname" that tries to instanciate... (OK)
* clean up (OK)
* GIT (github) (OK)
* Events: Say header to include a new js (create this by a publish&subscribe mechanism) http://tomaszdziurko.pl/2012/01/google-guava-eventbus-easy-elegant-publisher-subscriber-cases/ (OK)
* Tree creation at runtime (OK)
* Cleanup template directory
* Try different template engine (freemarker)
* Makros (partials)
* Componenten zusammenlegen (java + template)
* Warning, if global data is overwritten by local (can be switched on or off!) Maybe dev-mode?
* Maybe template abstraction to get more than one Template engine running? (YAGNI?)
* Trader, der entscheidet, welches Templates angezogen werden.
* Parameterliste für Fragments spezifizieren, damit Fragments nicht das komplette Request Object benötigen - was ist mit Cookies? etc - evtl. als Objekt reinreichen, wenn man unbedingt will!
* Superior error-display (aufklappbarer Stacktrace...)
* Fragment-Tree at the bottom
* build some nice components (menu, header, head, footer, list, teasers, gallery...)
* debug-mode: Gibt Kommentare über- und unter Templates aus.
* Add Bootstrap components
* Add possibility to change between different template-sets
* Allow Direct JSON-Defintions in controller
* import template set / provide template-sets (as jars?)
* Check why Event Bus is so slow!
* provide indenpendance from EventBus (two ways to render: With or without interfragment communication)
* template-Renderer with interface, even more central! (with help of a bean?, singleton)
* Caching (Config-Tree; Fragments with exact same Template, Input-Data and without listeners) 


TBD:
* Is global data really useful?
* Useful to have an "end-template"? or better a template with an embedded Tag (<ROSEBUD_CONTENT>), like Gauss VIP?
* Event-System or better a message-bus?